@using Components.Misc.Confirmation;


<div class="w3-modal" style="display:block;">
    <div class="w3-modal-content w3-card w3-round" style="max-width:500px;">
        <header class="w3-container">
            <h3 class="textOverflow w3-text-black">@Title</h3>
        </header>
        <div class="w3-container w3-margin-bottom w3-text-black">
            @Message
        </div>
        <footer class="">
            <div class="w3-row w3-border-top">
                <div class="w3-half">
                    <button class="w3-block w3-button w3-hover-black w3-ripple w3-text-black" style="border-radius: 0px 0px 0px 4px;" @onclick="@(() => OnConfirm.InvokeAsync())">
                        <span>Confirm</span>
                    </button>
                </div>
                <div class="w3-half">
                    <button class="w3-block w3-button w3-hover-black w3-ripple w3-text-black" style="border-radius: 0px 0px 4px 0px;" @onclick="@(() => OnCancel.InvokeAsync())">
                        <span>Cancel</span>
                    </button>
                </div>
            </div>
        </footer>
    </div>
</div>


@code {

    /// <summary>
    /// Title of the modal
    /// </summary>
    /// <value></value>
    [Parameter]
    public string? Title { set; get; } = "Confirm";

    /// <summary>
    /// The main text of the modal
    /// </summary>
    /// <value></value>
    [Parameter]
    public string? Message { set; get; }

    /// <summary>
    /// Not used right now
    /// </summary>
    /// <value></value>
    [Parameter]
    public string? Guid { set; get; }

    /// <summary>
    /// Not used right now
    /// </summary>
    /// <value></value>
    [Parameter]
    public string? Name { set; get; }

    /// <summary>
    /// Not used right now
    /// </summary>
    /// <value></value>
    [Parameter]
    public string? Image { set; get; }

    /// <summary>
    /// Method to call when user confimed the action
    /// </summary>
    /// <value></value>
    [Parameter]
    public EventCallback OnConfirm { set; get; }

    /// <summary>
    /// Method to call when user canceled the action
    /// </summary>
    /// <value></value>
    [Parameter]
    public EventCallback OnCancel { set; get; }

}