<div id="pnlTicketActionSidebar" class="w3-sidebar w3-bar-block w3-card w3-animate-left w3-card w3-container" style="width:89px;">
    <a href="@BackUrl" class="w3-bar-item w3-button w3-transparent w3-hover-black w3-round w3-border w3-border-dark-grey w3-margin-top">
        <span class="material-symbols-sharp" title="Back" style="margin-top:4px;">arrow_back</span>
    </a>
    @if(ProjectGuid != Guid.Empty && ProjectName != string.Empty){
        <a href="/Tickets" class="w3-bar-item w3-button w3-transparent w3-hover-black w3-round w3-border w3-border-dark-grey w3-margin-top">
            <span class="material-symbols-sharp" title="List ticket for project @ProjectName" style="margin-top:4px;">list</span>
        </a>
    }
    @if(ChildContent != null){
        @ChildContent
    }
</div>

@code{
    [Parameter]
    public string? ProjectName {set; get;}
    
    [Parameter]
    public Guid ProjectGuid {set; get;}

    [Parameter]
    public Guid TicketGuid {set; get;}

    [Parameter]
    public RenderFragment? ChildContent {set; get;}
    Guid ticketGuid;

    [Parameter]
    public string BackUrl {get; set;} = "#";
    protected override async Task OnParametersSetAsync(){
        ticketGuid = TicketGuid;
        await Task.Delay(0);
    }
}