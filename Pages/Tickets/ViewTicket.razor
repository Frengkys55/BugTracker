@page "/Tickets/ViewTicket"
@using Models.Tickets;
@inject Tools.Misc.AccessTokenHelper _accresstokenHelper;
@inject IConfiguration _configuration;

<NavMenu />

<div>
    <div class="w3-row">
        <div class="w3-col m5">
            <header>
                <h1 class="w3-container">@ticket.Name</h1>
                <div class="w3-bar">
                    <span class="w3-bar-item w3-text-gray">id @ticket.guid</span>
                    <a href="/Tickets/Edit?id=@ticket.guid" class="w3-bar-item w3-button w3-transparent w3-border w3-border-black w3-hover-black w3-round w3-ripple w3-right w3-margin-right">Edit</a>
                </div>
            </header>
            <div class="w3-container">
                <div class="w3-row">
                    <div class="w3-half">
                        <header>
                            <span><b>Ticket type</b></span>
                        </header>
                        <div>
                            @ticket.Type
                        </div>
                    </div>
                    <div class="w3-half">
                        <header>
                            <span><b>Ticket Severity</b></span>
                        </header>
                        <div>
                            @ticket.Severity
                        </div>
                    </div>
                </div>
            </div>
            <div class="w3-container w3-margin-top">
                <header>
                    <span><b>Description</b></span>
                </header>
                <div>
                    @if(ticket.Description.ToLower().Contains("n/a")){
                        <span>No description given</span>
                    }
                    else{
                        @ticket.Description
                    }
                </div>
            </div>
        </div>
        <div class="w3-col m7">
            <header class="w3-container">
                <h1>Comments</h1>
            </header>
            <div class="w3-container" style="height:600px;">
                <BugTracker.Pages.Comments.Components.CommentList />
            </div>
        </div>
    </div>
</div>

@code{
    Models.Tickets.Ticket ticket = new ();

    [Parameter]
    [SupplyParameterFromQuery]
    public Guid id {set; get;}

    protected override async Task OnInitializedAsync(){
        string address = _configuration["BugTrackerBackendAddress"] + "/Ticket?id=" + id;
        ticket = await new Ticket().GetTicketDetail(id, _accresstokenHelper.accessToken, address);
    }
}