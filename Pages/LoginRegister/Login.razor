@page "/Login"
@layout Pages.Layouts.LoginRegisterLayout
@inject NavigationManager navigationManager
@inject IConfiguration configuration
@inject Tools.Misc.AccessTokenHelper _accesstokenHelper;

<div class="w3-card w3-mobile" style="width:400px;">
    <div class="w3-cell-row">
        <div class="w3-cell w3-container w3-mobile">
            <div class="w3-row w3-margin-top">
                <label>Username</label>
                <input type="text" @bind-value="userName" class="w3-input w3-border-black" title="Your username" />
            </div>
            <div class="w3-row w3-margin-top">
                <label>Password</label>
                <input type="password" @bind-value="password" class="w3-input w3-border-black" title="Your username" />
            </div>
            <div class="w3-bar w3-margin-top w3-margin-bottom">
                <button class="w3-bar-item w3-button w3-border w3-border-black w3-round w3-hover-black w3-ripple" @onclick="Login_Click">Login</button>
            </div>
        </div>
        <div class="w3-cell w3-cell-middle w3-container w3-mobile">
            <div class="w3-bar-block">
                <button class="w3-bar-item w3-button w3-round w3-border w3-border-black w3-hover-black w3-ripple w3-margin-bottom">Register</button>
                @if(enableGuest){
                    <button class="w3-bar-item w3-button w3-round w3-border w3-border-black w3-hover-black w3-ripple w3-margin-bottom">Login as Guest</button>
                }
            </div>
        </div>
    </div>
</div>

@code{
    string userName = string.Empty;
    string password = string.Empty;

    bool enableGuest = true;

    protected override async Task OnInitializedAsync(){

        if(Convert.ToBoolean(configuration["EnableLoginAsGuest"])){
            enableGuest = true;
        }
        else{
            enableGuest = false;
        }
    }

    protected async Task Login_Click(){
        Models.UserLoginModel user = new ();
        user.UserName = userName;
        user.password = password;
        string accesstoken = user.Login(user);
        _accesstokenHelper.SetAccesstoken(accesstoken);
        navigationManager.NavigateTo("/");
    }

    protected async Task Register_Click(){
        navigationManager.NavigateTo("/Register");
    }

    protected async Task LoginGuest_Click(){
        userName = "guest_" + Guid.NewGuid;
        password = Guid.NewGuid().ToString();
        await Login_Click();
    }
}