@using Models.Projects;
@inject IConfiguration _configuration;
@inject Tools.Misc.AccessTokenHelper _accesstokenHelper;

<div class="w3-padding w3-card w3-round" style="height:100%;">
    <header>
        <span>Latest creaed project</span>
    </header>
    <div>
        <span class="w3-xlarge textOverflow w3-block"><b>@projectName</b></span>
    </div>
    <div>
        <div class="w3-cell">
            <span class="w3-xxxlarge w3-margin-right">@dayCreated</span>
        </div>
        <div class="w3-cell w3-cell-middle">
            <span>@monthCreated<br />@yearCreated</span>
        </div>
    </div>
</div>

@code{
    string projectName = string.Empty;
    int dayCreated = 0;
    string monthCreated = string.Empty;
    int yearCreated = 0;

    protected override async Task OnInitializedAsync(){

        string address = _configuration["BugTrackerBackendAddress"] + "/Project/GetProjects";
        try{
            var result = await new Project().GetProjects(address, _accesstokenHelper.accessToken);
            List<ProjectShortModel> resultConverted = new List<ProjectShortModel>();

            foreach(var item in result){
                resultConverted.Add(item);
            }

            address = _configuration["BugTrackerBackendAddress"] + "/Project";
            var project = await new Project().ReadProject(resultConverted[^1].guid, address, _accesstokenHelper.accessToken);
            projectName = project.Name;
            dayCreated = project.DateCreated.Day;
            monthCreated = project.DateCreated.Month.ToString();
            yearCreated = project.DateCreated.Year;
        }
        catch(Exception err){
            Console.WriteLine(err.Message);
        }
    }
}